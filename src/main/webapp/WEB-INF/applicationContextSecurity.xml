<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/util
                        http://www.springframework.org/schema/util/spring-util.xsd">
                        
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager">
    </bean>
    
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="cacheManager" ref="cacheManager" />
        <property name="realm" ref="authenticationRealm" />
    </bean>
    
    <bean id="sessionAccessFilter" class="ca.uhnresearch.pughlab.tracker.security.SessionAccessFilter">
    </bean>
    
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    
    
    <beans profile="form_authentication">
        <bean id="passwordMatcher" class="ca.uhnresearch.pughlab.tracker.security.BcryptPasswordMatcher">
        </bean>
        
        <bean id="sessionAuthenticationFilter" class="ca.uhnresearch.pughlab.tracker.security.SessionAuthenticationFilter">
            <property name="loginUrl" value="/api/authorization/login" />
            <property name="successUrl" value="/api/studies" />
        </bean>    
        
        <bean id="authenticationRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
            <property name="dataSource" ref="dataSource" />
            <property name="credentialsMatcher" ref="passwordMatcher" />
            <property name="permissionsLookupEnabled" value="true" />
            <property name="authenticationQuery">
                <value>
                    SELECT HASH FROM USERS WHERE USERNAME = ?
                </value>
            </property>
            <property name="userRolesQuery">
                <value>
                    SELECT R.NAME FROM USER_ROLES UR JOIN ROLES R ON UR.ROLE_ID = R.ID WHERE UR.USERNAME = ?
                </value>
            </property>
            <property name="permissionsQuery">
                <value>
                    SELECT RP.PERMISSION FROM ROLE_PERMISSIONS RP JOIN ROLES R ON RP.ROLE_ID = R.ID WHERE R.NAME = ?
                </value>
            </property>
        </bean>
        
        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
            <property name="securityManager" ref="securityManager"/>
            
            <property name="filters">
                <util:map>
                    <entry key="sessionAuthentication" value-ref="sessionAuthenticationFilter" />
                    <entry key="sessionAccess" value-ref="sessionAccessFilter" />
                </util:map>
            </property>
            
            <property name="filterChainDefinitions">
                <value>
                    /api/authorization/login = sessionAuthentication
                    /api/authorization/logout = logout
                    /api/** = sessionAccess
                    /events/** = sessionAccess
                    /** = anon
                </value>
            </property>
        </bean>
        
            
    </beans>
    
    <beans profile="oidc_authentication">
    
        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
            <property name="securityManager" ref="securityManager"/>
            
            <property name="filters">
                <util:map>
                    <entry key="redirectForAuthentication" value-ref="redirectForAuthenticationFilter" />
                    <entry key="sessionAccess" value-ref="sessionAccessFilter" />
                    <entry key="client" value-ref="clientFilter" />
                </util:map>
            </property>
            
            <property name="filterChainDefinitions">
                <value>
                    /api/authorization/login = redirectForAuthentication
                    /api/authorization/logout = logout
                    /api/authorization/authorize = client
                    /api/** = sessionAccess
                    /events/** = sessionAccess
                    /** = anon
                </value>
            </property>
        </bean>
        
        <bean id="clientFilter" class="io.buji.pac4j.ClientFilter">
            <property name="clients" ref="authenticationClients" />
            <property name="failureUrl" value="/error" />
        </bean>
    
        <bean id="redirectForAuthenticationFilter" class="ca.uhnresearch.pughlab.tracker.security.RedirectForAuthenticationFilter">
            <property name="clients" ref="authenticationClients" />
        </bean>
    
        <bean id="oidcClient" class="ca.uhnresearch.pughlab.tracker.security.AbsolutifyingOidcClient">
            <property name="discoveryURI" value="http://localhost:8080/.well-known/openid-configuration" />
            <property name="clientID" value="78d7d85b-0187-4a17-8a14-b24fc879b275" />
            <property name="secret" value="AJCXmQHAF77TmVZvKvSkuefNcPmoWFFitnvtzoHtu56hxcZucFI9JqjxerX5y0Pj_Dlur8bI0-HFdztgt9drX0s" />
            <property name="name" value="uhn" />
            <property name="enableContextualRedirects" value="true" />
        </bean>
        
        <bean id="authenticationClients" class="org.pac4j.core.client.Clients">
            <property name="callbackUrl" value="/api/authorization/authorize" />
            <property name="clientsList">
                <util:list>
                    <ref bean="oidcClient" />
                </util:list>
            </property>
        </bean>
                
        <bean id="authenticationRealm" class="io.buji.pac4j.ClientRealm">
            <property name="defaultRoles" value="ROLE_USER" />
            <property name="clients" ref="authenticationClients" />
        </bean>
        
    </beans>

</beans>